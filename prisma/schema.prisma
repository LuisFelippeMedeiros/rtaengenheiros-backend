generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  name       String
  email      String    @unique
  password   String
  active     Boolean   @default(true)
  created_at DateTime  @default(now())
  created_by String?
  updated_at DateTime?
  updated_by String?
  deleted_at DateTime?
  deteled_by String?
  group      Group     @relation(fields: [group_id], references: [id])
  group_id   String
  Company    Company?  @relation(fields: [company_id], references: [id])
  company_id String?

  @@map("users")
}

model Group {
  id          String       @id @default(uuid())
  name        String       @unique
  description String?
  active      Boolean      @default(true)
  created_at  DateTime     @default(now())
  created_by  String?
  updated_at  DateTime?
  updated_by  String?
  deleted_at  DateTime?
  deleted_by  String?
  roles       RolesGroup[]
  User        User[]
  Company     Company?     @relation(fields: [company_id], references: [id])
  company_id  String?

  @@map("groups")
}

model Role {
  id         String       @id @default(uuid())
  name       String       @unique
  active     Boolean      @default(true)
  action     String?
  module     String?
  type       String?
  created_at DateTime     @default(now())
  created_by String?
  updated_at DateTime?
  updated_by String?
  deleted_at DateTime?
  deleted_by String?
  groups     RolesGroup[]
  Company    Company?     @relation(fields: [company_id], references: [id])
  company_id String?

  @@map("roles")
}

model RolesGroup {
  id       String @id @default(uuid())
  role_id  String
  Group    Group  @relation(fields: [group_id], references: [id])
  group_id String
  Role     Role   @relation(fields: [role_id], references: [id])

  @@map("rolesgroup")
}

model City {
  id         Int      @id
  name       String
  active     Boolean  @default(true)
  created_at DateTime @default(now())
  State      State    @relation(fields: [state_id], references: [id])
  state_id   Int

  @@map("cities")
}

model State {
  id         Int      @id
  name       String
  initials   String   @unique
  active     Boolean  @default(true)
  created_at DateTime @default(now())
  City       City[]

  @@map("states")
}

model Company {
  id              String            @id @default(uuid())
  name            String
  cnpj            String
  created_at      DateTime          @default(now())
  created_by      String?
  updated_at      DateTime?
  updated_by      String?
  deleted_at      DateTime?
  deleted_by      String?
  User            User[]
  Billtopay       BillToPay[]
  Group           Group[]
  Role            Role[]
  Supplier        Supplier[]
  Product         Product[]
  Category        Category[]
  PurchaseRequest PurchaseRequest[]
  Status          Status[]

  @@map("companies")
}

model Supplier {
  id               String                  @id @default(uuid())
  name             String
  cnpj             String                  @unique
  ie               String
  telephone        String
  email            String?
  account          String?
  agency           String?
  bank             String?
  pix              String?
  pix2             String?
  address          String?
  district         String?
  number           String?
  complement       String?
  active           Boolean?                @default(true)
  created_at       DateTime                @default(now())
  created_by       String?
  updated_at       DateTime?
  updated_by       String?
  deleted_at       DateTime?
  deleted_by       String?
  purchaserequests PurchaseRequestBudget[]
  billstopay       BillToPay[]
  Company          Company?                @relation(fields: [company_id], references: [id])
  company_id       String?

  @@map("suppliers")
}

model Product {
  id              String            @id @default(uuid())
  name            String            @unique
  active          Boolean           @default(true)
  created_at      DateTime          @default(now())
  created_by      String?
  updated_at      DateTime?
  updated_by      String?
  deleted_at      DateTime?
  deleted_by      String?
  purchaserequest PurchaseRequest[]
  Category        Category?         @relation(fields: [category_id], references: [id])
  category_id     String?
  Company         Company?          @relation(fields: [company_id], references: [id])
  company_id      String?

  @@map("products")
}

model Category {
  id         String    @id @default(uuid())
  name       String    @unique
  active     Boolean   @default(true)
  created_at DateTime  @default(now())
  created_by String?
  updated_at DateTime?
  updated_by String?
  deleted_at DateTime?
  deleted_by String?
  products   Product[]
  Company    Company?  @relation(fields: [company_id], references: [id])
  company_id String?

  @@map("categories")
}

model PurchaseRequest {
  id          String                  @id @default(uuid())
  identifier  Int                     @default(autoincrement())
  reason      String
  active      Boolean                 @default(true)
  comment     String
  created_at  DateTime                @default(now())
  created_by  String?
  updated_at  DateTime?
  updated_by  String?
  deleted_at  DateTime?
  deleted_by  String?
  rejected_at DateTime?
  rejected_by String?
  approved_at DateTime?
  approved_by String?
  supplier    PurchaseRequestBudget[]
  Product     Product?                @relation(fields: [product_id], references: [id])
  product_id  String?
  Status      Status?                 @relation(fields: [status_id], references: [id])
  status_id   String?
  Company     Company?                @relation(fields: [company_id], references: [id])
  company_id  String?

  @@map("purchaserequests")
}

model PurchaseRequestBudget {
  id                 String           @id @default(uuid())
  quantity           String?
  budget             Decimal
  Supplier           Supplier?        @relation(fields: [supplier_id], references: [id])
  supplier_id        String?
  PurchaseRequest    PurchaseRequest? @relation(fields: [purchaserequest_id], references: [id])
  purchaserequest_id String?

  @@map("purchaserequestbudgets")
}

model Status {
  id              String            @id @default(uuid())
  name            String            @unique
  active          Boolean           @default(true)
  created_at      DateTime          @default(now())
  created_by      String?
  updated_at      DateTime?
  updated_by      String?
  deleted_at      DateTime?
  deleted_by      String?
  PurchaseRequest PurchaseRequest[]
  Company         Company?          @relation(fields: [company_id], references: [id])
  company_id      String?

  @@map("status")
}

model BillToPay {
  id                 String    @id @default(uuid())
  identifier         Int       @default(autoincrement())
  name               String
  payment_info       String
  authorized         String
  invoice            String
  due_date           DateTime
  scheduling         DateTime
  reference_month    String
  issue_date         DateTime?
  comment            String?
  Supplier           Supplier? @relation(fields: [supplier_id], references: [id])
  supplier_id        String?
  dda                Boolean
  price              Decimal
  invoice_attachment String?
  active             Boolean   @default(true)
  created_at         DateTime  @default(now())
  created_by         String?
  updated_at         DateTime?
  updated_by         String?
  deleted_at         DateTime?
  deleted_by         String?
  Company            Company?  @relation(fields: [company_id], references: [id])
  company_id         String?

  @@map("billstopay")
}
